name: Agentic MCP Pipeline

on:
  push:
    branches:
      - 'agent/*'

jobs:
  create-pr-and-review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Install Maven
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Run build
        run: mvn -B -DskipTests package

      - name: Create Pull Request
        id: create_pr
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "Automated changes from Agentic MCP"
          commit-message: "chore: agentic updates"
          branch: "agent/${{ github.sha }}"
          base: main
          reviewers: ${{ secrets.AUTO_REVIEWERS }}

      - name: Automated Code Review (guidelines)
        if: steps.create_pr.outputs.pull_request_number != ''
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = parseInt(core.getInput('pr') || process.env.PR_NUMBER || `${{ steps.create_pr.outputs.pull_request_number }}`);
            const prFiles = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
            });
            let violations = [];
            for (const f of prFiles.data) {
              if (!f.filename.endsWith('.java') && !f.filename.endsWith('.kt')) continue;
              const contentResp = await github.rest.repos.getContent({
                owner: context.repo.owner,
                repo: context.repo.repo,
                path: f.filename,
                ref: f.sha
              });
              let content = '';
              if (contentResp && contentResp.data && contentResp.data.content) {
                const buff = Buffer.from(contentResp.data.content, contentResp.data.encoding || 'base64');
                content = buff.toString('utf8');
              }
              if (content.includes('System.out.println')) {
                violations.push(`Found System.out.println in ${f.filename}`);
              }
            }
            const body = violations.length > 0
              ? 'Automated reviewer found the following guideline issues:\n' + violations.map(v => '- ' + v).join('\n') + '\n\nPlease prefer slf4j or logger frameworks and follow coding_guidelines.md.'
              : 'Automated reviewer: No obvious guideline violations detected.';
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: body
            });
        env:
          PR: ${{ steps.create_pr.outputs.pull_request_number }}
